name: LMS CI/CD

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1 - Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2 - Log in to Azure using service principal credentials
    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3 - Log in to Azure Container Registry
    - name: Log in to ACR
      run: |
        az acr login --name lmsacr001

    # Step 4 - Build Docker image (inside your 'library-management-system' folder)
    - name: Build Docker image
      run: |
        docker build -t lmsacr001.azurecr.io/lms:latest ./library-management-system

    # Step 5 - Push image to ACR
    - name: Push Docker image
      run: |
        docker push lmsacr001.azurecr.io/lms:latest

    # Step 6 - (One-time) Link ACR to your Container App environment
    # You can safely keep this in workflow; it will simply overwrite credentials if already linked.
    # - name: Link ACR with Container App
    #   run: |
    #     az containerapp registry set \
    #       --name lms123 \
    #       --resource-group LIB1 \
    #       --server lmsacr001.azurecr.io \
    #       --username ${{ secrets.ACR_USERNAME }} \
    #       --password ${{ secrets.ACR_PASSWORD }}

    # Step 7 - Deploy updated image to Azure Container App
    - name: Deploy updated image
      run: |
        az containerapp update \
          --name lms123 \
          --resource-group LIB1 \
          --image lmsacr001.azurecr.io/lms:latest
